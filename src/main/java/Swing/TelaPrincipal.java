/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Swing;

import Model.City;
import Services.Lista;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aluno
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form TelaPrincipal
     */
    Lista lista;
    public TelaPrincipal() {
        lista = new Lista();
        initComponents();
        preencherTabela();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(TelaPrincipal.EXIT_ON_CLOSE);
    }
    
    public void refreshTable() {
        // Força a tabela a se atualizar
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        CreateButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        DeletarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IBGE AnalytiQ");

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código IBGE", "Municípios", "Microrregião", "Estado", "Região Geográfica", "Área Km²", "População", "Domicílios", "PIB Total (R$ mil)", "IDH", "Renda Média", "Renda Nominal", "PEA Dia", "IDH Educação", "IDH Longevidade", "Densidade Demográfica", "PIB perCapta", "Classificação IDH", "Última Alteração", "Classificação Edu", "Classificação Longe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        jButton1.setBackground(new java.awt.Color(255, 79, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        CreateButton.setBackground(new java.awt.Color(0, 102, 0));
        CreateButton.setForeground(new java.awt.Color(255, 255, 255));
        CreateButton.setText("Adicionar");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(63, 75, 152));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        DeletarButton.setBackground(new java.awt.Color(118, 0, 0));
        DeletarButton.setForeground(new java.awt.Color(255, 255, 255));
        DeletarButton.setText("Deletar");
        DeletarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CreateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeletarButton)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 933, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(CreateButton)
                    .addComponent(jButton2)
                    .addComponent(DeletarButton))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        Criar telaCriar = new Criar();
        telaCriar.setVisible(true);
        
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int linhaSelecionada = Table.getSelectedRow();
        if(linhaSelecionada != -1){
            Editar telaEditar = new Editar(linhaSelecionada);
            telaEditar.setVisible(true);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void DeletarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletarButtonActionPerformed
        int linhaSelecionada = Table.getSelectedRow();
        if(linhaSelecionada != -1){
            Deletar telaDeletar = new Deletar(linhaSelecionada);
            telaDeletar.setVisible(true);
        }
    }//GEN-LAST:event_DeletarButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Buscar
    }//GEN-LAST:event_jButton1ActionPerformed

  
    
    private void preencherTabela(){
        
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        
        ArrayList<City> cidades = lista.getCidades();
        
        Object rowData[] = new Object[21];
         
        for(int i = 0; i < cidades.size(); i++){
            
            rowData[0] = cidades.get(i).getId();
            rowData[1] = cidades.get(i).getMunicipio();
            rowData[2] = cidades.get(i).getMicroregiao();
            rowData[3] = cidades.get(i).getEstado();
            rowData[4] = cidades.get(i).getRegiaoGeografica();
            rowData[5] = cidades.get(i).getArea();
            rowData[6] = cidades.get(i).getPopulacao();
            rowData[7] = cidades.get(i).getDomicilios();
            rowData[8] = cidades.get(i).getPibTotal();
            rowData[9] = cidades.get(i).getRendaMedia();
            rowData[10] = cidades.get(i).getRendaNominal();
            rowData[11] = cidades.get(i).getPea();
            rowData[12] = cidades.get(i).getIdhEducacao();
            rowData[13] = cidades.get(i).getIdhLongevidade();
            rowData[14] = cidades.get(i).getDensidadeDemografica();
            rowData[15] = cidades.get(i).getPibPcTotal();
            rowData[16] = cidades.get(i).getClassficacaoIDH();
            rowData[17] = cidades.get(i).getPibPcTotal();
            rowData[18] = cidades.get(i).getUltimaAtualizacao();
            rowData[19] = cidades.get(i).getClassificacaoIDHEdu();
            rowData[20] = cidades.get(i).getClassificacaoIDHLongevidade();
            model.addRow(rowData);
        }
        
    }
    
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateButton;
    private javax.swing.JButton DeletarButton;
    private javax.swing.JTable Table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
